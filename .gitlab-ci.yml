# This template can use to set up an AWS EKS cluster for specific project
# (group currently is not supported) and allows to you create and manage Nginx Ingress Controller,
# CertManager and other tools with custom values for Helm charts as you wish :)

variables:
  CI_IMAGE_NAME: $CI_REGISTRY_IMAGE:terraform-v${TERRAFORM_VERSION}-helmfile-${HELMFILE_VERSION}
  HELMFILE_VERSION: v0.89.0 # https://github.com/roboll/helmfile/releases
  TERRAFORM_VERSION: 0.12.13 # https://releases.hashicorp.com/terraform/
  #
  TERRAFORM_DIR: ./terraform/aws-eks
  TERRAFORM_VARS: $TERRAFORM_DIR/eu-central-1.tfvars
  KUBEHOME_DIR: $CI_PROJECT_DIR/.kube
  KUBECONFIG: $CI_PROJECT_DIR/.kube/config
  # Terraform variables
  PLAN: plan.tfplan
  TF_VAR_kubeconfig_path: $CI_PROJECT_DIR/.kube/config
  TF_VAR_root_gitlab_project: $CI_PROJECT_ID
  # Set a group id to add a kubernetes cluster to its settings
  # ⚠️ REPLACE WITH YOUR OWN ⚠️
  TF_VAR_root_gitlab_group_id: 6638212
  TF_VAR_dns_zone: $KUBE_INGRESS_BASE_DOMAIN
  # helmfiles
  GITLAB_RUNNER_INSTALLED: "true"
  # helmfile environment variables
  CREATE_NAMESPACE_IF_MISSING: "true" # indicate whether the namespace should be created if it does not exist
  HELM_HOST: localhost:44134
  TILLER_NAMESPACE: tillerless

image:
  name: $CI_IMAGE_NAME
  entrypoint:
  - '/usr/bin/env'
  - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

cache:
  paths:
  - .terraform

before_script:
- mkdir -p $KUBEHOME_DIR
- echo $KUBECONFIG
- terraform --version
- terraform init $TERRAFORM_DIR

stages:
- docker
- validate
- build
- test
- deploy
- gitlab
- infra

validate:
  extends:
  - .terraform
  stage: validate
  script:
  - terraform validate $TERRAFORM_DIR

plan:
  stage: build
  extends:
  - .terraform
  script:
  - terraform plan -var-file=$TERRAFORM_VARS -out=$PLAN $TERRAFORM_DIR
  artifacts:
    name: plan
    paths:
      - $PLAN

# Separate apply job for manual launching Terraform as it can be destructive
# action.
apply:
  stage: deploy
  extends:
  - .terraform
  environment:
    name: production
  script:
  - terraform apply -input=false $PLAN
  dependencies:
  - plan
  when: manual
  allow_failure: false

# Builds the docker image, includes tools that might you want to use on the next stages
# Notice, that the $CI_IMAGE_NAME enviroment variables will be used in the next stage and 
# based on the some env variables
# The versions of terraform and helmfile are defined on top of gitlab ci file, you can set others values
# - TERRAFORM_VERSION
# - HELMFILE_VERSION
docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: docker
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - docker build --pull -t "$CI_IMAGE_NAME" --build-arg terraform_ver=$TERRAFORM_VERSION --build-arg helmfile_ver=$HELMFILE_VERSION .
  - docker push "$CI_IMAGE_NAME"
  only:
    refs:
    - master
    - 1-add-support-for-doks-digital-ocean-kubernetes
    changes:
    - Dockerfile
    - helmfile.d/*

.auto-configure:
  image: $CI_IMAGE_NAME

.before-script:
  before_script:
  - aws --version
  - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
  - kubectl version
  - helm version -c
  - helm init -c
  - helm plugin install https://github.com/rimusz/helm-tiller
  - helm tiller install
  - helm tiller start-ci
  - helmfile -v
  - helmfile deps

# Heavily used by included gitlab templates
.general:
  only:
    refs:
    - master
    - 1-add-support-for-doks-digital-ocean-kubernetes
    variables:
    - $EKS_CLUSTER_NAME
    - $AWS_DEFAULT_REGION
    - $AWS_ACCESS_KEY_ID
    - $AWS_SECRET_ACCESS_KEY
  dependencies:
  - apply
  tags:
  - docker

.terraform:
  only:
    refs:
    - master
    - 1-add-support-for-doks-digital-ocean-kubernetes
    variables:
    - $GITLAB_TOKEN
    - $AWS_DEFAULT_REGION
    - $AWS_ACCESS_KEY_ID
    - $AWS_SECRET_ACCESS_KEY
    # specifies the DNS suffix for the externally-visible websites and services deployed in the cluster,
    # this is required in order to generate valid TLS certificates
    - $KUBE_INGRESS_BASE_DOMAIN 
  except:
    variables:
    - $TERRAFORM_DISABLED == "yes"

include:
- local: .gitlab/ci/templates/Jobs/Auto-Ingress.gitalb-ci.yml
- local: .gitlab/ci/templates/Jobs/Gitlab-Runner.gitlab-ci.yml
- local: .gitlab/ci/templates/Jobs/Cluster-AutoScaler.gitlab-ci.yml